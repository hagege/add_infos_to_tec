Todo:

Fertigstellung 1.01:
Dateien kopieren:
1. add_shortcode_to_tec.php
2. readme.txt


geplant für 1.5:
1. 2(-3) zusätzliche Felder
2. Codeoptimierung
3. Sicherheitsprüfung
4. ggfs. Icon für Gutenberg



geplant für 1.4:
1. Tabs
2. 2-3 zusätzliche Felder
3. Codeoptimierung
4. Sicherheitsprüfung

Version 1.4 ist mit dem Tabs zwar (fast) fertig, aber grundsätzlich möchte ich doch lieber bei einer Einstellungsseite bleiben.
Außerdem fehlen die Einstellungen in der Plugin - Liste. Daher wird die Version 4.0 erst mal nicht mehr verfolgt, aber als Arbeitsversion zunächst erhalten.




in readme.txt:

= [0.8] 2019-05-12 =
* New feature: The name of the buttons can now be defined via the settings.

= 1.1 =
* Icon added to the editor tinycme, so that now the entries for the internal and external link no longer only have to be entered manually directly as short code, but via an additional dialog.

screenshot mit dem ICON




13052019.3.
  Shortcode als Gutenberg Block umwandeln, siehe hier:
      https://www.affordablewebsiteorlando.com/learn-convert-shortcodes-gutenberg-blocks-wordpress-developers/

13052019.4.
  Problem: Wenn - aus welchen Gründen auch immer - jemand die Bezeichnung der Kategorie ändert,
      wird logischerweise der Shortcode nicht automatisch geändert.
      Das könnte z. B. eine Option für eine PRO-VERSION sein.

13052019.6.
  Übersetzungen (Lokalisieren) bei JS-Dateien
      https://codex.wordpress.org/Function_Reference/wp_localize_script
      https://pascalbirchler.com/internationalization-in-wordpress-5-0/
      https://bueltge.de/daten-aus-wordpress-an-javascript-uebergeben-2/1334/
      https://make.wordpress.org/core/2018/11/09/new-javascript-i18n-support-in-wordpress/
      https://www.smashingmagazine.com/2018/01/internationalize-your-wordpress-website/

13052019.12.
  Bei Seiten, die keinen events calendar haben, sollte eine (in dem Fall) unsinnige Option "vl" abgefangen werden

14052019.1.
  https bzw. http automatisch ergänzen, wenn das fehlt - siehe auch entsprechende Vorbereitungen in 1.1  (ait_buttons.js)

29052019.1.
  2 Felder für eigene Nutzung - das können spezielle Links auf Veranstaltungskategorien sein oder aber allgemeine LINKS
  siehe Zeile 173:
  if ( $werte[$ait_shortcode_wert1] != 'nein' ) {
    $fs_ausgabe = $fs_ausgabe . '<p class="fuss_button-absatz"><a class="fuss_button-beitrag" href=' . $ait_pfad_wert1 . ' ' . target="_blank">'. $ait_label_wert1 . '</a></p>';
  }
  $ait_kurz_w1         enthält die Bezeichnung für das Feld, z. B. 'fm' - muss entweder manuell eingegeben werden oder wird im Shortcode Generator angezeigt
  $ait_pfad_w1         enthält den kompletten Pfad, z. B. 'https://aachenerkinder.de/veranstaltungen/kategorie/flohmarkt/Karte/'
  $ait_label_w1        enthält die Bezeichnung, die im Button zu sehen ist, z. B. "Weitere Flohmärkte"

  d. h. es kommen insgesamt 6 (2 * 3) Felder in den Einstellungen dazu.

  Umsetzung:
  ait_admin_functions:
    nach Zeile 79:
      fs_kurz_w1 = 'fm',      // Beispiel oder leer ?
      fs_pfad_w1 = 'https://aachenerkinder.de/veranstaltungen/kategorie/flohmarkt/Karte/',
      fs_label_w1 = 'Weitere Flohmärkte',
      fs_kurz_w2 = 'ferien',
      fs_pfad_w2 = 'https://aachenerkinder.de/veranstaltungen/kategorie/ferien',
      fs_label_w2 = 'Weitere Ferienangebote',

    nach Zeile 172:
      <tr valign="top">
      <th scope="row"><?php echo __( 'Short for further link 1:', 'add-infos-to-the-events-calendar' ); ?></th>
      <td><input type="text" name="add_infos_to_tec_settings[fs_kurz_w1]" size=10 value="<?php echo esc_attr( $add_infos_to_tec_options['fs_kurz_w1']); ?>" /></td>
      </tr>

      <tr valign="top">
      <th scope="row"><?php echo __( 'Path for further link 1:', 'add-infos-to-the-events-calendar' ); ?></th>
      <td><input type="text" name="add_infos_to_tec_settings[fs_pfad_w1]" size=30 value="<?php echo esc_attr( $add_infos_to_tec_options['fs_pfad_w1']); ?>" /></td>
      </tr>

      <tr valign="top">
      <th scope="row"><?php echo __( 'Description for further link 1:', 'add-infos-to-the-events-calendar' ); ?></th>
      <td><input type="text" name="add_infos_to_tec_settings[fs_label_w1]" size=30 value="<?php echo esc_attr( $add_infos_to_tec_options['fs_label_w1']); ?>" /></td>
      </tr>

      <tr valign="top">
      <th scope="row"><?php echo __( 'Short for further link 2:', 'add-infos-to-the-events-calendar' ); ?></th>
      <td><input type="text" name="add_infos_to_tec_settings[fs_kurz_w2]" size=10 value="<?php echo esc_attr( $add_infos_to_tec_options['fs_kurz_w2']); ?>" /></td>
      </tr>

      <tr valign="top">
      <th scope="row"><?php echo __( 'Path for further link 2:', 'add-infos-to-the-events-calendar' ); ?></th>
      <td><input type="text" name="add_infos_to_tec_settings[fs_pfad_w2]" size=30 value="<?php echo esc_attr( $add_infos_to_tec_options['fs_pfad_w2']); ?>" /></td>
      </tr>

      <tr valign="top">
      <th scope="row"><?php echo __( 'Description for further link 2:', 'add-infos-to-the-events-calendar' ); ?></th>
      <td><input type="text" name="add_infos_to_tec_settings[fs_label_w2]" size=30 value="<?php echo esc_attr( $add_infos_to_tec_options['fs_label_w2']); ?>" /></td>
      </tr>

  add_shortcode_to_tec:
    nach Zeile 98
      $werte unklare Lösung

    Zeile 166 ersetzen:
      if ( $werte[$ait_kurz_w1] != 'nein' ) {
        $fs_ausgabe = $fs_ausgabe . '<p class="fuss_button-absatz"><a class="fuss_button-beitrag" href=' . $ait_pfad_w1 . ' ' . target="_blank">'. $ait_label_w1 . '</a></p>';
      }

      if ( $werte[$ait_kurz_w2] != 'nein' ) {
        $fs_ausgabe = $fs_ausgabe . '<p class="fuss_button-absatz"><a class="fuss_button-beitrag" href=' . $ait_pfad_w2 . ' ' . target="_blank">'. $ait_label_w2 . '</a></p>';
      }

    nach Zeile 384:
      if (empty( $ait_options['fs_kurz_w1'])) {
         $ait_options['fs_kurz_w1'] = 'fm ';        // Beispiel oder leer ?
      }


  zunächst zurückgestellt:
  Daher ist es sinnvoll, die Einstellungen auf zwei tabs zu verteilen:
  a) Gestaltung: mit Farben, etc.
  b) Bezeichnung: mit allen Bezeichnungen, Pfaden und Shortcodebeschriftungen
  siehe hier:
  https://scottdeluzio.com/create-tabbed-settings-pages-for-wordpress-plugins/
  http://qnimate.com/wordpress-settings-api-a-comprehensive-developers-guide/

  Hinweis in der readme.txt: Bei den zusätzlichen Feldern sollten später keine Änderungen bei der Bezeichnung der Shortcodes vorgenommen werden,
    weil es ansonsten zu Problemen kommt und die Shortcodes nicht mehr korrekt dargestellt werden

  Prüfen:
  Evtl. wäre es sinnvoll, die Einstellungen der jeweiligen Einstellungsseiten bei zwei Tabs in zwei Arrays zu speichern und diese dann vor der Ausführung des
  Shortcodes zusammenzuführen (https://www.php.net/manual/de/function.array-merge.php)









Erledigt:
28052019.1.
Fehler in der Console sichtbar:
  Uncaught ReferenceError: tinymce is not defined
    at ait_buttons-72a1ea84aa4b27a0928cbb0a24a3ceb3.js:1
    at ait_buttons-72a1ea84aa4b27a0928cbb0a24a3ceb3.js:9
    lag an dem Aufruf der Übersetzungsfunktion (siehe Ende), jetzt zunächst mal auskommentiert.

1. Da es wegen der Schreibweise zu Problemen kommen kann, sollte der slug durch die Funktion cliff_get_events_taxonomies(), siehe Zeile 226
    übergeben werden
    siehe dazu auch https://codex.wordpress.org/Function_Reference/wp_dropdown_categories
      value_field (string) (optional) Term field that should be used to populate the 'value' attribute of the option elements.
      Accepts any valid term field: 'term_id', 'name', 'slug', 'term_group', 'term_taxonomy_id', 'taxonomy', 'description', 'parent', 'count'.
      Default: term_id
      Da gibt es auch Beispiele für Dropdown-Listen, die für die Übergabe bei der Shortcode-Erstellung genutzt werden können
    Beispiel: Wenn slug = "sport" ist, aber die Kategorie "Sport" heißt
    "slug" shon übergeben, aber dann stimmt der Vergleich nicht mehr, d. h. hier müsste das noch zusätzlich umgewandelt werden (z. B. alles in Kleinbuchstaben)

2. Erweitern des plugins um "ferien" und "kfm" für aachenerkinder.de, sowie "fm" für aachen50plus.de
   Abhängig vom der URL sollen Einstellungen für aachen50plus.de und aachenerkinder.de aktiviert werden, evtl. aber auch so drin lassen ohne Prüfung
        Am Anfang:
        $additional_options = false;
        // Wenn der Pfad "aachen" enthält:
        if stripos(path_for_tec(), 'aachen'){
          $additional_options = true;
        }

        Dann ab Zeile 123:
        'kfm' => 'nein',
        'ferien' => 'nein',

        Dann ab Zeile 181:
        if $additional_options === true {
          if ( $werte['fm'] != 'nein' ) {
            $fs_ausgabe = $fs_ausgabe . '<p class="fuss_button-absatz"><a class="fuss_button-beitrag" href=' . $ait_pfad . 'flohmarkt target="_blank">' . 'Weitere Flohmärkte' . '</a></p>';
          }
          if ( $werte['kfm'] != 'nein' ) {
            $fs_ausgabe = $fs_ausgabe . '<p class="fuss_button-absatz"><a class="fuss_button-beitrag" href=' . $ait_pfad . 'flohmarkt target="_blank">' . 'Weitere Kinderflohmärkte' . '</a></p>';
          }
          if ( $werte['ferien'] != 'nein' ) {
            $fs_ausgabe = $fs_ausgabe . '<p class="fuss_button-absatz"><a class="fuss_button-beitrag" href=' . $ait_pfad . 'ferien target="_blank">' . 'Weitere Ferienangebote' . '</a></p>';
          }
        }



5. Bei Nutzung des Icons sollte bei Leerlassen des Internen Link nicht il="" ausgegeben werden. Auch mal für externen Link prüfen
    ==> funktioniert einwandfrei, weil das in dem Fall einfach ignoriert wird.

8. Der Ordner für TEC muss geprüft werden, weil ansonsten die Einstellungen nicht funktionieren, evtl. über
    plugin_dir_url o. ä.

9. Hinweis, wenn TEC nicht installiert ist.

10. Versionsanzeige (Konstante AIT_VERSION)

11. Bezeichnungen für die Buttons in den Einstellungen
    Problem ist die Sprachdatei. Klären, wie das upgedatet wird.

13. auf der lokalen Seite aachenerkinder.de muss unbedingt der Shortcode aus der functions.php entfernt werden, sonst funktioniert das plugin nicht.
    Daher auf das parent theme umgestellt.






Zurückgestellt:

0. Nonces
    wichtig:
    <form method="post" action="options-general.php?page=add_infos_to_tec_settings_page">
    damit man wieder auf die Einstellungsseite kommt. Dann wird allerdings nichts gespeichert


    unklar, wo das eingebaut werden muss, siehe Anleitung auf Seite 87:
    if (! isset( $_POST['_wpnonce'] )	|| ! wp_verify_nonce( $_POST['_wpnonce'],	'kommt_von_A' )) {
        print 'Sorry, Nonce ist nicht korrekt.';
        exit;
    } else {
      // Weiter im Programm
    }

    Wenn das in die function add_infos_to_tec_create_menu() eingebaut wird, dann erfolgt zumindest eine Reaktion, allerdings wenig erwünscht, d. h.
    hier ist die richtige Stelle für die Abfrage !!!!
    Aber offenbar kommt da die Variable 'ait_tec' nicht an
    /*
    if (! isset( $_POST['ait_tec'] )	|| ! wp_verify_nonce( $_POST['ait_tec'],	'plugin_settings_link' )) {
        print 'Sorry, Nonce ist nicht korrekt.';
        exit;
    }
    */
